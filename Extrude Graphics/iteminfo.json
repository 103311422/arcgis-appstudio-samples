{
    "access": "public",
    "accessInformation": null,
    "appCategories": [
    ],
    "avgRating": 0,
    "banner": null,
    "categories": [
    ],
    "commentsEnabled": true,
    "created": 1495733529000,
    "culture": "en-au",
    "description": "\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'>To extrude graphics according to a property: </p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><span style=' color:#24292e;'>1.   Create a GraphicsOverlay and SimpleRenderer.</span> </p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><span style=' color:#24292e;'>2.   Get the renderer's SceneProperties using renderer-&gt;sceneProperties().</span> </p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><span style=' color:#24292e;'>3.   Set the extrusion mode for the renderer with props.setExtrusionMode</span></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><span style=' color:#24292e;'>4.   Specify the attribute name of the graphic that the extrusion mode will use: props.setExtrusionExpression(&quot;[height]&quot;).</span> </p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><span style=' color:#24292e;'>5.   Set the renderer on the graphics overlay using graphicsOverlay-&gt;setRenderer(renderer).</span> </p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><span style=' color:#24292e;'>6.   Create graphics with the attribute set: graphic-&gt;attributes()-&gt;insertAttribute(&quot;height&quot;, z).</span> </p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><a href='http://geonet.esri.com/groups/appstudio/blog/2016/12/06/how-to-describe-our-resources-in-terms-of-difficulty-complexity-and-time-to-digest'><span style=' text-decoration: underline; color:#0000ff;'>Resource Level:</span></a>🍌🍌</p>",
    "documentation": null,
    "extent": [
    ],
    "guid": null,
    "id": null,
    "industries": [
    ],
    "languages": [
    ],
    "largeThumbnail": null,
    "licenseInfo": null,
    "listed": false,
    "modified": 1497595095000,
    "name": null,
    "numComments": 4,
    "numRatings": 0,
    "numViews": 15,
    "orgId": "2U3NfasNQ9o9LkLt",
    "owner": null,
    "ownerFolder": null,
    "properties": null,
    "proxyFilter": null,
    "screenshots": [
    ],
    "size": 35311,
    "snippet": "This sample demonstrates how to render graphics extruded in the Z direction. ",
    "spatialReference": null,
    "tags": null,
    "thumbnail": "thumbnail/thumbnail.png",
    "title": "Extrude Graphics",
    "type": "Native Application",
    "typeKeywords": [
        "API_QML",
        "App",
        "Application",
        "AppStudio",
        "Configuration",
        "Native",
        "qml"
    ],
    "url": null
}
