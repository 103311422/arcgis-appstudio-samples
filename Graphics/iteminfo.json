{
    "access": "public",
    "accessInformation": null,
    "appCategories": [
    ],
    "avgRating": 0,
    "banner": null,
    "categories": [
    ],
    "commentsEnabled": true,
    "created": 1495504361000,
    "culture": "en-au",
    "description": "\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'>Identify Graphics: This sample demonstrates how to identify graphics in a graphics overlay. When you select a graphic on the map, a message box appears. </p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'>Add Graphics With Renderers: This sample demonstrates how to add graphics and set renderer on graphic overlays. </p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'>Add Graphics With Symbols: This sample demonstrates how to add graphics with symbols to a graphics overlay. </p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'>Graphic Overlay: This sample demonstrates applying a dictionary renderer to graphics to display military symbology. This sample loads a number of point, line, and polygon military elements from an XML file and adds them as graphics to a GraphicsOverlay. A DictionaryRenderer is applied to the GraphicsOverlay in order to display the graphics with MIL-STD-2525D military symbology. When all graphics are created, the map's viewpoint is set to zoom to the full extent of all graphics.</p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'>Graphic Overlay 3D: This sample demonstrates applying a dictionary renderer to a graphics overlay in a 3D scene to display military symbology. The sample loads a number of point military elements from an XML file and adds them as graphics to a GraphicsOverlay. A DictionaryRenderer is applied to the GraphicsOverlay in order to display the graphics with MIL-STD-2525D military symbology. </p>\n<p style='-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><br /></p>\n<p style=' margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;'><a href='http://geonet.esri.com/groups/appstudio/blog/2016/12/06/how-to-describe-our-resources-in-terms-of-difficulty-complexity-and-time-to-digest'><span style=' text-decoration: underline; color:#0000ff;'>Resource Level: </span></a>üçåüçå </p>",
    "documentation": null,
    "extent": [
    ],
    "guid": null,
    "id": null,
    "industries": [
    ],
    "languages": [
    ],
    "largeThumbnail": null,
    "licenseInfo": null,
    "listed": false,
    "modified": 1498245646669,
    "name": null,
    "numComments": 4,
    "numRatings": 0,
    "numViews": 11,
    "orgId": "2U3NfasNQ9o9LkLt",
    "owner": null,
    "ownerFolder": null,
    "properties": null,
    "proxyFilter": null,
    "screenshots": [
    ],
    "size": 2478085,
    "snippet": "Five samples related to Graphics were included, they are Identify Graphics,Add Graphics With Renderers,Add Graphics With Symbols,Graphic Overlay, and Graphic Overlay 3D  ",
    "spatialReference": null,
    "tags": null,
    "thumbnail": "thumbnail/thumbnail.png",
    "title": "Graphics",
    "type": "Native Application",
    "typeKeywords": [
        "API_QML",
        "App",
        "Application",
        "AppStudio",
        "Configuration",
        "Native",
        "qml"
    ],
    "url": null
}
